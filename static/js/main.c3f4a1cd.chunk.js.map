{"version":3,"sources":["components/addtask/addtask.module.css","components/settings/settings.module.css","components/modal/modal.module.css","components/header/header.module.css","components/task/task.module.css","components/menu/menu.js","components/header/header.js","components/modal/modal.js","components/task/taskList.js","components/timer/timer.js","components/task/task.js","components/addtask/addtask.js","components/settings/settings.js","components/notfoundview.js","App.js","reportWebVitals.js","index.js","components/menu/menu.module.css","components/timer/timer.module.css"],"names":["module","exports","Menu","active","setActive","className","s","menuActive","menu","onClick","blur","menuContent","e","stopPropagation","menuHeader","menuList","menuItem","to","exact","menuLink","Header","useState","setMenuActive","id","burgerMenuContainer","burgerBtn","modalRoot","document","querySelector","Modal","onClose","task","editTask","name","setName","description","setDescription","newTask","createPortal","Modal__backdrop","event","currentTarget","target","formtStyle","onSubmit","preventDefault","input","type","value","onChange","placeholder","textArea","rows","buttonEdit","TaskList","showModal","setShowmodal","currentPost","setCurrentPost","localTasks","window","localStorage","getItem","parsedTasks","JSON","parse","initialTasks","tasks","setTasks","setItem","stringify","toggleModal","taskListContainer","navBtn","backBtn","map","taskContainer","taskInfo","taskName","taskDescription","statusContainer","checked","toggledTusk","startBtn","buttonDelete","taskId","filter","updTask","addTask","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","newestOnTop","rtl","pauseOnFocusLoss","Timer","currentItem","interv","setInterv","status","setStatus","localMinutes","parsedMinutes","minutes","setMinutes","seconds","setSeconds","initialMin","initialSec","localBreakMinutes","parsedBreakMinutes","breakMinutes","setBreakMinutes","initialBreakMin","start","run","setInterval","updatedS","updatedM","updatedBreakM","clearInterval","stop","reset","timerSection","didIt","timerBtnAdd","timerCotainer","timerProgressContainer","maxValue","minValue","counterClockwise","styles","buildStyles","rotation","strokeLinecap","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","text","timerBtnContainer","timerBtn","timerResetBtn","Task","taskid","useParams","find","item","taskTimeContainer","taskInfoContainer","toggleCompleted","shortid","generate","addTaskContainer","navContainer","forwardBtn","buttonAdd","Settings","setInitialMin","setInitialBreakMin","notify","formContainer","settingsTitle","test","setBtn","NotFoundView","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c3f4a1cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addTaskContainer\":\"addtask_addTaskContainer__2uJt6\",\"input\":\"addtask_input__1gAYt\",\"textArea\":\"addtask_textArea__13-L0\",\"buttonAdd\":\"addtask_buttonAdd__1Vc8m\",\"backBtn\":\"addtask_backBtn__3n0at\",\"forwardBtn\":\"addtask_forwardBtn__5X4uZ\",\"taskContainer\":\"addtask_taskContainer__3hIC4\",\"taskListContainer\":\"addtask_taskListContainer__QEgch\",\"navContainer\":\"addtask_navContainer__3fZOT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"settings_formContainer__3aTRX\",\"settingsTitle\":\"settings_settingsTitle__29ZPx\",\"setBtn\":\"settings_setBtn__f3XHI\",\"input\":\"settings_input__3Ango\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal__backdrop\":\"modal_Modal__backdrop__1V7hj\",\"formtStyle\":\"modal_formtStyle__HnAsH\",\"input\":\"modal_input__3AOP7\",\"textArea\":\"modal_textArea__1GDck\",\"buttonEdit\":\"modal_buttonEdit__6oL-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerMenuContainer\":\"header_burgerMenuContainer__2JII5\",\"burgerBtn\":\"header_burgerBtn__3-hOg\",\"headerMenu\":\"header_headerMenu__1D1hK\",\"menuList\":\"header_menuList__2dBBn\",\"menuItem\":\"header_menuItem__3cHTF\",\"menuLink\":\"header_menuLink__1kFbx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskContainer\":\"task_taskContainer__1r4L6\",\"formContainer\":\"task_formContainer__1GPlB\",\"addTaskContainer\":\"task_addTaskContainer__2eEfK\",\"input\":\"task_input__BxsO3\",\"textArea\":\"task_textArea__1Da68\",\"taskName\":\"task_taskName__9-j4r\",\"taskDescription\":\"task_taskDescription__1pvBq\",\"buttonAdd\":\"task_buttonAdd__3kcPy\",\"buttonEdit\":\"task_buttonEdit__ojMJt\",\"buttonDelete\":\"task_buttonDelete__vYHMy\",\"backBtn\":\"task_backBtn__2jz94\",\"startBtn\":\"task_startBtn__2ryQg\",\"taskTimeContainer\":\"task_taskTimeContainer__SljO3\",\"taskListContainer\":\"task_taskListContainer__p1Lp6\",\"navBtn\":\"task_navBtn__2qptg\",\"taskInfo\":\"task_taskInfo__25gk5\",\"statusContainer\":\"task_statusContainer__2b04-\",\"checked\":\"task_checked__1K85v\"};","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./menu.module.css\";\r\n\r\nexport default function Menu({ active, setActive }) {\r\n  return (\r\n    <div\r\n      className={active ? s.menuActive : s.menu}\r\n      onClick={() => setActive(false)}\r\n    >\r\n      <div className={s.blur}>\r\n        <div className={s.menuContent} onClick={(e) => e.stopPropagation()}>\r\n          <div className={s.menuHeader}>Menu</div>\r\n          <ul className={s.menuList}>\r\n            <li className={s.menuItem}>\r\n              <NavLink\r\n                to=\"/pomodoro\"\r\n                exact\r\n                className={s.menuLink}\r\n                onClick={() => setActive(false)}\r\n              >\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li className={s.menuItem}>\r\n              <NavLink\r\n                to=\"/tasks\"\r\n                exact\r\n                className={s.menuLink}\r\n                onClick={() => setActive(false)}\r\n              >\r\n                Tasks\r\n              </NavLink>\r\n            </li>\r\n            <li className={s.menuItem}>\r\n              <NavLink\r\n                to=\"/addtask\"\r\n                className={s.menuLink}\r\n                onClick={() => setActive(false)}\r\n              >\r\n                Add new Task\r\n              </NavLink>\r\n            </li>\r\n            <li className={s.menuItem}>\r\n              <NavLink\r\n                to=\"/settings\"\r\n                className={s.menuLink}\r\n                onClick={() => setActive(false)}\r\n              >\r\n                Settings\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport s from \"./header.module.css\";\r\nimport Menu from \"../menu/menu\";\r\n\r\nexport default function Header() {\r\n  const [menuActive, setMenuActive] = useState(false);\r\n  return (\r\n    <>\r\n      <header id=\"header\" className={s.burgerMenuContainer}>\r\n        <nav>\r\n          <div\r\n            className={s.burgerBtn}\r\n            onClick={() => setMenuActive(!menuActive)}\r\n          >\r\n            <span />\r\n          </div>\r\n        </nav>\r\n        <Menu active={menuActive} setActive={setMenuActive} />\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport s from \"./modal.module.css\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default function Modal({ onClose, task, editTask }) {\r\n  const [name, setName] = useState(task ? task.name : \"\");\r\n  const [description, setDescription] = useState(task ? task.description : \"\");\r\n\r\n  const newTask = { id: task.id, name: name, description: description };\r\n\r\n  const handleSubmitForm = (event) => {\r\n    event.preventDefault();\r\n    editTask(newTask);\r\n  };\r\n  const handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div>\r\n      <div className={s.Modal__backdrop} onClick={handleBackdropClick}>\r\n        <form className={s.formtStyle} onSubmit={handleSubmitForm}>\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.currentTarget.value)}\r\n            placeholder=\"Name\"\r\n          />\r\n          <textarea\r\n            className={s.textArea}\r\n            rows=\"5\"\r\n            type=\"text\"\r\n            name=\"description\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.currentTarget.value)}\r\n            placeholder=\"Description\"\r\n          ></textarea>\r\n          <button type=\"submit\" className={s.buttonEdit}>\r\n            {task ? \"Edit task\" : \"Add task\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport s from \"./task.module.css\";\r\nimport Modal from \"../modal/modal\";\r\nimport initialTasks from \"../tasks.json\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function TaskList() {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [showModal, setShowmodal] = useState(false);\r\n  const [currentPost, setCurrentPost] = useState(\"\");\r\n\r\n  const localTasks = window.localStorage.getItem(\"tasks\");\r\n  const parsedTasks = JSON.parse(localTasks);\r\n  const [tasks, setTasks] = useState(\r\n    parsedTasks === null ? initialTasks : parsedTasks\r\n  );\r\n  window.localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n\r\n  const notify = () =>\r\n    toast.error(\"Please, fill in name and description of your new task\", {\r\n      position: \"top-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n  const toggleModal = (task) => {\r\n    setShowmodal(!showModal);\r\n    setCurrentPost(task);\r\n  };\r\n\r\n  const deleteTask = (taskId) => {\r\n    setTasks(tasks.filter((task) => task.id !== taskId));\r\n  };\r\n  const addTask = (task) => {\r\n    if (name && description) {\r\n      setTasks([task, ...tasks]);\r\n      setName(\"\");\r\n      setDescription(\"\");\r\n      return;\r\n    }\r\n\r\n    notify();\r\n  };\r\n\r\n  const editTask = (updTask) => {\r\n    setTasks(\r\n      tasks.map((task) => {\r\n        if (updTask.id === task.id) {\r\n          return (task = {\r\n            id: task.id,\r\n            name: updTask.name,\r\n            description: updTask.description,\r\n          });\r\n        }\r\n        return task;\r\n      })\r\n    );\r\n\r\n    setShowmodal(!showModal);\r\n  };\r\n  const toggleCompleted = (toggledTusk) => {\r\n    setTasks(\r\n      tasks.map((task) => {\r\n        if (toggledTusk.id === task.id) {\r\n          return (task = {\r\n            id: task.id,\r\n            name: task.name,\r\n            description: task.description,\r\n            checked: !task.checked,\r\n          });\r\n        }\r\n        return task;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={s.taskListContainer}>\r\n        <div className={s.navBtn}>\r\n          <NavLink to=\"/\" exact>\r\n            <button className={s.backBtn} type=\"button\">\r\n              Back to Home\r\n            </button>\r\n          </NavLink>\r\n          <NavLink to=\"/addtask\" exact>\r\n            <button className={s.backBtn} type=\"button\">\r\n              Add Task\r\n            </button>\r\n          </NavLink>\r\n        </div>\r\n        <ul>\r\n          {tasks.map((task) => (\r\n            <li key={task.id} className={s.taskContainer}>\r\n              <div className={s.taskInfo}>\r\n                <div>\r\n                  <h1 className={s.taskName}>{task.name}</h1>\r\n                  <span className={s.taskDescription}>{task.description}</span>\r\n                </div>\r\n                <div className={s.statusContainer}>\r\n                  <input\r\n                    className={s.checked}\r\n                    type=\"checkbox\"\r\n                    checked={task.checked}\r\n                    onChange={() => toggleCompleted(task)}\r\n                  />\r\n                  <Link to={`/tasks/${task.id}`} className={s.menuLink}>\r\n                    <button className={s.startBtn} type=\"button\">\r\n                      Start\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className={s.buttonEdit}\r\n                type=\"button\"\r\n                onClick={() => toggleModal(task)}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                className={s.buttonDelete}\r\n                type=\"button\"\r\n                onClick={() => deleteTask(task.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      {showModal && (\r\n        <Modal\r\n          onClose={toggleModal}\r\n          task={currentPost}\r\n          editTask={editTask}\r\n          addTask={addTask}\r\n        />\r\n      )}\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./timer.module.css\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nexport default function Timer({ currentItem = false }) {\r\n  const [interv, setInterv] = useState();\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const localMinutes = window.localStorage.getItem(\"minutes\");\r\n  const parsedMinutes = JSON.parse(localMinutes);\r\n\r\n  const [minutes, setMinutes] = useState(parsedMinutes ? parsedMinutes : 25);\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  const [initialMin] = useState(parsedMinutes ? parsedMinutes : 25);\r\n  const [initialSec] = useState(0);\r\n  ////////////settings for break timer\r\n  const localBreakMinutes = window.localStorage.getItem(\"break\");\r\n  const parsedBreakMinutes = JSON.parse(localBreakMinutes);\r\n  const [breakMinutes, setBreakMinutes] = useState(\r\n    parsedBreakMinutes ? parsedBreakMinutes : 5\r\n  );\r\n  const [initialBreakMin] = useState(\r\n    parsedBreakMinutes ? parsedBreakMinutes : 5\r\n  );\r\n\r\n  const start = () => {\r\n    run();\r\n    setStatus(1);\r\n    setInterv(setInterval(run, 1000));\r\n  };\r\n\r\n  let updatedS = seconds;\r\n  let updatedM = minutes;\r\n  let updatedBreakM = breakMinutes;\r\n\r\n  const run = () => {\r\n    if (updatedS === 0) {\r\n      updatedM--;\r\n      updatedS = 60;\r\n    }\r\n    if (updatedM === -1) {\r\n      setStatus(3);\r\n      clearInterval(interv);\r\n      setMinutes(updatedBreakM);\r\n      setBreakMinutes(minutes);\r\n      return;\r\n    }\r\n    updatedS--;\r\n    return setMinutes(updatedM), setSeconds(updatedS);\r\n  };\r\n\r\n  const stop = () => {\r\n    clearInterval(interv);\r\n    setStatus(2);\r\n  };\r\n\r\n  const reset = () => {\r\n    clearInterval(interv);\r\n    setStatus(0);\r\n    setMinutes(initialMin);\r\n    setSeconds(initialSec);\r\n    setBreakMinutes(initialBreakMin);\r\n  };\r\n\r\n  const resume = () => start();\r\n\r\n  return (\r\n    <>\r\n      <div className={s.timerSection}>\r\n        {currentItem.checked ? (\r\n          <>\r\n            <h1 className={s.didIt}>Great job! You did it!</h1>\r\n            <NavLink to=\"/\" exact>\r\n              <button className={s.backBtn} type=\"button\">\r\n                Back to Home\r\n              </button>\r\n            </NavLink>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <NavLink to=\"/addtask\" exact className={s.timerBtnAdd}>\r\n              Add Task\r\n            </NavLink>\r\n            <div className={s.timerCotainer}>\r\n              {status === 3 ? <h1 className={s.didIt}>Well done!</h1> : \"\"}\r\n\r\n              <div className={s.timerProgressContainer}>\r\n                <CircularProgressbar\r\n                  value={minutes}\r\n                  maxValue={initialMin}\r\n                  minValue={initialSec}\r\n                  counterClockwise={true}\r\n                  styles={buildStyles({\r\n                    rotation: 1,\r\n                    strokeLinecap: \"butt\",\r\n                    pathTransitionDuration: 0.5,\r\n                    pathColor: \"#d6d6d6\",\r\n                    textColor: \"#f88\",\r\n                    trailColor: `rgba(255, 136, 136)`,\r\n                    backgroundColor: \"#3e98c7\",\r\n                  })}\r\n                  text={`${minutes >= 10 ? minutes : \"0\" + minutes}:${\r\n                    seconds >= 10 ? seconds : \"0\" + seconds\r\n                  }`}\r\n                />\r\n              </div>\r\n              <div className={s.timerBtnContainer}>\r\n                {status === 0 ? (\r\n                  <div>\r\n                    <button className={s.timerBtn} onClick={start}>\r\n                      Start\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                {status === 1 ? (\r\n                  <div>\r\n                    <button className={s.timerBtn} onClick={stop}>\r\n                      Stop\r\n                    </button>\r\n                    <button className={s.timerResetBtn} onClick={reset}>\r\n                      Reset\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                {status === 2 ? (\r\n                  <div>\r\n                    <button className={s.timerBtn} onClick={resume}>\r\n                      Resume\r\n                    </button>\r\n                    <button className={s.timerResetBtn} onClick={reset}>\r\n                      Reset\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {status === 3 ? (\r\n                  <div>\r\n                    <button className={s.timerBtn} onClick={stop}>\r\n                      Stop\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Timer from \"../timer/timer\";\r\nimport s from \"./task.module.css\";\r\n\r\nexport default function Task() {\r\n  const { taskid } = useParams();\r\n\r\n  const localTasks = window.localStorage.getItem(\"tasks\");\r\n  const parsedTasks = JSON.parse(localTasks);\r\n  const currentItem = parsedTasks.find((item) => item.id === taskid);\r\n\r\n  const [tasks, setTasks] = useState(parsedTasks);\r\n  window.localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n\r\n  const toggleCompleted = (currentItem) => {\r\n    setTasks(\r\n      tasks.map((task) => {\r\n        if (currentItem.id === task.id) {\r\n          return (task = {\r\n            id: task.id,\r\n            name: currentItem.name,\r\n            description: currentItem.description,\r\n            checked: !currentItem.checked,\r\n          });\r\n        }\r\n        return task;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={s.taskTimeContainer}>\r\n        <div className={s.taskInfoContainer}>\r\n          <h1 className={s.taskName}>{currentItem.name}</h1>\r\n          <span className={s.taskDescription}>{currentItem.description}</span>\r\n        </div>\r\n        <input\r\n          className={s.checked}\r\n          type=\"checkbox\"\r\n          checked={currentItem.checked}\r\n          onChange={() => toggleCompleted(currentItem)}\r\n        />\r\n      </div>\r\n      <Timer currentItem={currentItem} />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./addtask.module.css\";\r\nimport shortid from \"shortid\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function TaskList() {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const localTasks = window.localStorage.getItem(\"tasks\");\r\n  const parsedTasks = JSON.parse(localTasks);\r\n  const [tasks, setTasks] = useState(parsedTasks);\r\n  window.localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n\r\n  const notify = () =>\r\n    toast.error(\"Please, fill in name and description of your new task\", {\r\n      position: \"top-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n  const newTask = {\r\n    id: shortid.generate(),\r\n    name,\r\n    description,\r\n    checked: false,\r\n  };\r\n\r\n  const addTask = (task) => {\r\n    if (name && description) {\r\n      setTasks([task, ...tasks]);\r\n      setName(\"\");\r\n      setDescription(\"\");\r\n      return;\r\n    }\r\n\r\n    notify();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={s.taskListContainer}>\r\n        <div className={s.addTaskContainer}>\r\n          <div className={s.navContainer}>\r\n            <NavLink to=\"/\" exact>\r\n              <button className={s.backBtn} type=\"button\">\r\n                Home\r\n              </button>\r\n            </NavLink>\r\n            <NavLink to=\"/tasks\" exact>\r\n              <button className={s.forwardBtn} type=\"button\">\r\n                To all Tasks\r\n              </button>\r\n            </NavLink>\r\n          </div>\r\n          <form>\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.currentTarget.value)}\r\n              placeholder=\"Name\"\r\n            />\r\n            <textarea\r\n              className={s.textArea}\r\n              rows=\"5\"\r\n              type=\"text\"\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.currentTarget.value)}\r\n              placeholder=\"Description\"\r\n            ></textarea>\r\n          </form>\r\n          <button\r\n            className={s.buttonAdd}\r\n            type=\"button\"\r\n            onClick={() => addTask(newTask)}\r\n          >\r\n            Add Task\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./settings.module.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function Settings() {\r\n  const localMinutes = window.localStorage.getItem(\"minutes\");\r\n  const parsedMinutes = JSON.parse(localMinutes);\r\n  const [initialMin, setInitialMin] = useState(parsedMinutes);\r\n  window.localStorage.setItem(\"minutes\", JSON.stringify(initialMin));\r\n\r\n  const localBreakMinutes = window.localStorage.getItem(\"break\");\r\n  const parsedBreakMinutes = JSON.parse(localBreakMinutes);\r\n\r\n  const [initialBreakMin, setInitialBreakMin] = useState(parsedBreakMinutes);\r\n  window.localStorage.setItem(\"break\", JSON.stringify(initialBreakMin));\r\n\r\n  const handleSubmitForm = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleChangeMinutes = (e) => {\r\n    let onlyNumbers = /^[1-9][0-9]*$/.test(e.currentTarget.value);\r\n    if (!onlyNumbers) {\r\n      notify();\r\n    } else {\r\n      setInitialMin(e.currentTarget.value);\r\n    }\r\n  };\r\n\r\n  const handleChangeBreak = (e) => {\r\n    let onlyNumbers = /^[1-9][0-9]*$/.test(e.currentTarget.value);\r\n    if (!onlyNumbers) {\r\n      notify();\r\n    } else {\r\n      setInitialBreakMin(e.currentTarget.value);\r\n    }\r\n  };\r\n\r\n  const notify = () =>\r\n    toast.error(\"Please, use only numbers\", {\r\n      position: \"top-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <form className={s.formContainer} onSubmit={handleSubmitForm}>\r\n        <h1 className={s.settingsTitle}>\r\n          Please, set a time for the task in minutes\r\n        </h1>\r\n        <input\r\n          className={s.input}\r\n          type=\"number\"\r\n          placeholder=\"Set your Task time\"\r\n          onChange={handleChangeMinutes}\r\n        ></input>\r\n        <h1 className={s.settingsTitle}>\r\n          Please, set a break time before next task\r\n        </h1>\r\n        <input\r\n          className={s.input}\r\n          type=\"number\"\r\n          placeholder=\"Set your Break time\"\r\n          onChange={handleChangeBreak}\r\n        ></input>\r\n        <NavLink to=\"/\" exact>\r\n          <button className={s.setBtn} type=\"submit\">\r\n            Set\r\n          </button>\r\n        </NavLink>\r\n      </form>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  );\r\n}\r\n","export default function NotFoundView() {\r\n  return <h1>No such page found, please try another request</h1>;\r\n}\r\n","import { Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/header/header\";\nimport TaskList from \"./components/task/taskList\";\nimport Task from \"./components/task/task\";\nimport Timer from \"./components/timer/timer\";\nimport AddTask from \"./components/addtask/addtask\";\nimport Settings from \"./components/settings/settings\";\nimport NotFoundView from \"./components/notfoundview\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/pomodoro\" exact>\n          <Timer />\n        </Route>\n        <Route path=\"/addtask\">\n          <AddTask />\n        </Route>\n        <Route path=\"/tasks\" exact>\n          <TaskList />\n        </Route>\n        <Route path=\"/tasks/:taskid\">\n          <Task />\n        </Route>\n        <Route path=\"/settings\">\n          <Settings />\n        </Route>\n        <Route>\n          <NotFoundView />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"menu_menu__XOyms\",\"menuActive\":\"menu_menuActive__2YkoN\",\"blur\":\"menu_blur__akFO7\",\"menuContent\":\"menu_menuContent__3ddar\",\"menuHeader\":\"menu_menuHeader__bnL6K\",\"menuList\":\"menu_menuList__26hZD\",\"menuLink\":\"menu_menuLink__1-c9j\",\"menuItem\":\"menu_menuItem__JpGzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerSection\":\"timer_timerSection__30HgU\",\"timerCotainer\":\"timer_timerCotainer__3d6Lz\",\"timerBtn\":\"timer_timerBtn__3DwZD\",\"timerResetBtn\":\"timer_timerResetBtn__YjnZN\",\"timerBtnAdd\":\"timer_timerBtnAdd__1UQI9\",\"timerBtnContainer\":\"timer_timerBtnContainer__2Kftm\",\"timerProgressContainer\":\"timer_timerProgressContainer__2SC9i\",\"didIt\":\"timer_didIt__1M3WL\",\"backBtn\":\"timer_backBtn__3wnhq\"};"],"sourceRoot":""}